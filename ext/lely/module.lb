#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2016-2017, 2021, Niklas Hauser
# Copyright (c) 2017, Fabian Greif
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# -----------------------------------------------------------------------------
def init(module):
    module.name = "lely-core"
    module.description = "xaxa"

def prepare(module, options):
    device = options[":target"]
    core = device.get_driver("core")
    if not (core and core["type"].startswith("cortex-m")):
        return False
    module.depends(
        ":architecture:assert",
        ":cmsis:device",
        ":platform:clock")
    return True

def build(env):
    generalIgnoreFiles = ["Makefile", "*.am", "*.in", "*.la", "*.lo", "*.o"]
    #### copy stuff we need
    env.outbasepath = "modm/ext/lely-core"
    env.copy("lely-core/include/", "include", ignore=env.ignore_files(*generalIgnoreFiles))
    env.copy("lely-core/src", "src", ignore=env.ignore_files(*generalIgnoreFiles))
    ###
    env.collect(":build:path.include", "modm/ext/lely-core/include")
    ### scons c++ preprocessor flags
    cppFlags = {
        ### windows
        "_WIN32": 0,
        "_WIN64": 0,
        ### memory specific
        "LELY_NO_MALLOC": 1,
        "LELY_HAVE_UCHAR_H": 1,
        "LELY_BIG_ENDIAN": 0,
        ### runtime specific
        "LELY_NO_THREADS": 1,
        "LELY_NO_ATOMICS": 0,
        "LELY_NO_STDIO": 1,
        "LELY_NO_DIAG": 1,
        ### can specific
        "LELY_NO_CANFD": 1,
        ### canopen specific
        "LELY_NO_CO_EMCY": 0,
        "LELY_NO_CO_OBJ_NAME": 0,
        "LELY_NO_CO_DCF": 0,
        ### misc
        "LELY_NO_ERRNO": 0,
        "LELY_HAVE_TIMESPEC_GET": 1,
    }
    for k,v in cppFlags.items():
        env.collect(":build:cppdefines", "%s=%s" % (k,v))
